{"name":"Rvtests","tagline":"Rare variant test software for next generation sequencing data","body":"<!-- markdown-toc start - Don't edit this section. Run M-x markdown-toc-generate-toc again -->\r\n**Table of Contents**\r\n\r\n- [Introduction](#introduction)\r\n- [Download](#download)\r\n- [Quick tutorial](#quick-tutorial)\r\n    - [Single variant tests](#single-variant-tests)\r\n    - [Groupwise tests](#groupwise-tests)\r\n    - [Related individual tests](#related-individual-tests)\r\n    - [Meta-analysis tests](#meta-analysis-tests)\r\n        - [Dominant models and recessive models](#dominant-models-and-recessive-models)\r\n- [Input files](#input-files)\r\n    - [Genotype file (VCF)](#genotype-file-vcf)\r\n    - [Phenotype file](#phenotype-file)\r\n    - [Covariate file](#covariate-file)\r\n    - [Trait transformation](#trait-transformation)\r\n- [Models](#models)\r\n    - [Single variant tests](#single-variant-tests)\r\n    - [Burden tests](#burden-tests)\r\n    - [Variable threshold models](#variable-threshold-models)\r\n    - [Kernel models](#kernel-models)\r\n    - [Meta-analysis models](#meta-analysis-models)\r\n    - [Utility models](#utility-models)\r\n- [Association test options](#association-test-options)\r\n    - [Sample inclusion/exclusion](#sample-inclusionexclusion)\r\n    - [Variant site filters](#variant-site-filters)\r\n        - [Annotation](#annotation)\r\n    - [Genotype filters](#genotype-filters)\r\n    - [Handle missing genotypes and phenotypes](#handle-missing-genotypes-and-phenotypes)\r\n    - [Specify groups (e.g burden unit)](#specify-groups-eg-burden-unit)\r\n- [Sex chromosome analysis](#sex-chromosome-analysis)\r\n- [Kinship generation](#kinship-generation)\r\n- [Resources](#resources)\r\n    - [UCSC RefFlat Genes](#ucsc-refflat-genes)\r\n    - [Gencode Genes](#gencode-genes)\r\n- [Frequently Asked Questions (FAQ)](#frequently-asked-questions-faq)\r\n- [Feedback/Contact](#feedbackcontact)\r\n\r\n<!-- markdown-toc end -->\r\n\r\n[![Build Status](https://travis-ci.org/zhanxw/rvtests.png?branch=master)](https://travis-ci.org/zhanxw/rvtests)\r\n\r\n(Updated: November 2015)\r\n\r\n# Introduction\r\n\r\nRvtests, which stands for Rare Variant tests, is a flexible software package for genetic association studies. It is designed to support unrelated individual or related (family-based) individuals. Both quantitative trait and binary trait are supported. It includes a variety of association tests (e.g. single variant score test, burden test, variable threshold test, SKAT test, fast linear mixed model score test). It takes [VCF][vcf] format as genotype input file and takes PLINK format phenotype file and covariate file. From our practice, it is capable to analyze 8,000 related individuals using less than 400 Mb memory. \r\n\r\n[vcf]: http://www.1000genomes.com/\r\n\r\n# Download\r\n\r\nSource files can be downloaded from [github](https://github.com/zhanxw/rvtests/archive/master.zip) or [github page](https://github.com/zhanxw/rvtests).\r\nExecutable binary files (for Linux 64bit) can be downloaded from [here](https://github.com/zhanxw/rvtests/releases).\r\n\r\n\r\n# Quick tutorial\r\n\r\nHere is a quick example of how to use *rvtests* software in typical use cases.\r\n\r\n## Single variant tests\r\n\r\n    rvtests --inVcf input.vcf --pheno phenotype.ped --out output --single wald,score\r\n\r\nThis specifies single variant Wald and score test for association\r\ntests for every variant in the `input.vcf` file. The 6th column of the phenotype file, `phenotype.ped`, which is in PLINK format, is used. Rvtests will automatically check whether the phenotype is binary trait or quantitative trait.\r\nFor binary trait, the recommended way of coding is to code controls as 1, cases as 2, missing phenotypes as -9 or 0.\r\n\r\nFor other types of association tests, you can refer to [Models](#models).\r\n\r\n## Groupwise tests\r\nGroupwise tests includes three major kinds of tests.\r\n\r\n* Burden tests: group variants, which are usually less than 1% or 5% rare variants, for association tests. The category includes: CMC test, Zeggini test, Madsen-Browning test, CMAT test, and rare-cover test.\r\n* Variable threshold tests: group variants under different frequency thresholds.\r\n* Kernel methods: suitable to tests rare variants having different directions of effects. These includes SKAT test and KBAC test. \r\n\r\nAll above tests requires to group variants into a unit. The simplest case is to use gene as grouping unit. For different grouping method, see [Grouping](#Grouping). \r\n\r\nTo perform rare variant tests by gene, you need to use `--geneFile` to specify the gene range in a refFlat format. We provided different gene definitions in the [Resources](#Resources) section. You can use `--gene` to specify which gene(s) to test. For example, specify `--gene CFH,ARMS2` will perform association tests on CFH and ARMS2 genes. If there is no providing `--gene` option, all genes will be tests.\r\n\r\nThe following command line demonstrate how to use CMC method, variable threshold method(proposed by Price) and kernel based method (SKAT by Shawn Lee and KBAC by\r\nDajiang Liu) to test every gene listed in *refFlat\\_hg19.txt.gz*.\r\n\r\n    rvtests --inVcf input.vcf --pheno phenotype.ped --out output --geneFile refFlat_hg19.txt.gz --burden cmc --vt price --kernel skat,kbac\r\n\r\n\r\n## Related individual tests\r\n\r\nTo test related individuals, you will need to first create a kinship matrix:\r\n\r\n    vcf2kinship --inVcf input.vcf --bn --out output\r\n\r\nThe option `--bn` means calculating empirical kinship using Balding-Nicols method. You can specify `--ibs` to obtain IBS kinship or use `--pedigree input.ped` to calculate kinship from known pedigree information.\r\n\r\nThen you can use linear mixed model based association tests such as Fast-LMM score test, Fast-LMM LRT test and Grammar-gamma tests. An exemplar command is shown: \r\n\r\n    rvtests --inVcf input.vcf --pheno phenotype.ped --out output --kinship output.kinship --single famScore,famLRT,famGrammarGamma\r\n\r\n## Meta-analysis tests\r\n\r\nThe meta-analysis models outputs association test results and genotype covariance matrix. These statistics can be used in rare variant association analysis.\r\nWe provide single variant score test and generate genotype covariance matrix. \r\nYou can use command:\r\n   \r\n    rvtests --inVcf input.vcf --pheno phenotype.ped --meta score,cov --out output\r\n\r\nIn a more realistic scenario, you may want to adjust for covariates and want to inverse normalized residuals obtained in null model ([link](http://www.nature.com/ng/journal/vaop/ncurrent/full/ng.2852.html) to our methodology paper), then this command will work:\r\n   \r\n    rvtests --inVcf input.vcf --pheno phenotype.ped --covar example.covar --covar-name age,bmi --inverseNormal --useResidualAsPhenotype  --meta score,cov --out output\r\n\r\n\r\nHere the `--covar` specify a covariate file, and `--covar-name` specify which covariates can used in the analysis. Covariate file format can be found [here](#Covariate file). `--inverseNormal --useResidualAsPhenotype` specifies trait transformation method. That means first fit a regression model of the phenotype on covariates (intercept automatically added), then the residuals are inverse normalized. Trait transformation details can be found [here](#Trait transformation).\r\n\r\nWe support both unrelated individuals and related individuals (e.g. family data). You need to append `--kinship input.kinship` to the command line:\r\n\r\n    rvtests --inVcf input.vcf --pheno phenotype.ped --meta score,cov --out output --kinship input.kinship\r\n\r\nThe file `input.kinship` is calculated by `vcf2kinship` program, and usage to this program is described in [Related individual tests](#related-individual-tests).\r\n\r\n### Dominant models and recessive models\r\n\r\nDominant and recessive disease models are supported by appending \"dominant\" and/or \"recessive\" after \"--meta\" option. For example, use \"--meta dominant,recessive\" will \r\ngenerate two sets of files. For dominant model, they are \"prefix.MetaDominant.assoc\" and \"prefix.MetaDominantCov.assoc.gz\"; for recessive model,\r\nthey are \"prefix.MetaRecessive.assoc\" and \"prefix.MetaRecessiveCov.assoc.gz\". Internally, in dominant models, genotypes 0/1/2 are coded as 0/1/1; in recessive models, genotypes 0/1/2 are \r\ncoded as 0/0/1. Missing genotypes will be imputed to the mean.\r\n\r\n# Input files\r\n\r\n## Genotype file (VCF)\r\n\r\nRvtests supports VCF (Variant Call Format) files. Files in both plain text format or gzipped format are supported. To use group-based rare variant tests, indexed the VCF files using [tabix](http://samtools.sourceforge.net/tabix.shtml) are required. \r\n\r\nHere are the commands to convert plain text format to bgzipped VCF format:\r\n\r\n    (grep ^\"#\" $your_old_vcf; grep -v ^\"#\" $your_old_vcf | sed 's:^chr::ig' | sort -k1,1n -k2,2n) | bgzip -c > $your_vcf_file \r\n    tabix -f -p vcf $your_vcf_file\r\n\r\nThe above commands will (1) remove the `chr` prefix from chromosome names; (2) sort VCF files by chromosome first, then by chromosomal positions; (3) compress using bgzip; (4) create tabix index.\r\n\r\nRvtests support genotype dosages. Use `--dosage DosageTag` to specify the dosage tag. For example, if VCF format field is \"GT:EC\" and individual genotype fields is \"0/0:0.02\", you can use `--dosage EC`, and rvtests will use the dosage 0.02 in the regression models.\r\n\r\n## Phenotype file\r\n\r\nYou can use `--mpheno $phenoypeColumnNumber` or `--pheno-name` to specify a given phenotype.\r\n\r\nAn example phenotype file, (`example.pheno`), has the following format: \r\n\r\n    fid iid fatid matid sex y1 y2 y3 y4\r\n    P1 P1 0 0 0 1.7642934435605 -0.733862638327895 -0.980843608339726 2\r\n    P2 P2 0 0 0 0.457111744989746 0.623297281416372 -2.24266162284447 1\r\n    P3 P3 0 0 0 0.566689682543218 1.44136462889459 -1.6490100777089 1\r\n    P4 P4 0 0 0 0.350528353203767 -1.79533911725537 -1.11916876241804 1\r\n    P5 P5 0 0 1 2.72675074738545 -1.05487747371158 -0.33586430010589 2\r\n\r\nPhenotype file is specified by the option `--pheno example.pheno` . The default phenotype column header is “`y1`”. If you want to use alternative columns as phenotype for association analysis (e.g the column with header y2), you may specify the phenotype by column or by name using either\r\n\r\n* --mpheno 2 \r\n* --pheno-name y2\r\n\r\n**NOTE:** to use “`--pheno-name`”, the  header line must starts with “`fid iid`” as PLINK requires.\r\n\r\nIn phenotype file, missing values can be denoted by NA or any non-numeric values. Individuals with missing phenotypes will be automatically dropped from subsequent association analysis. For each missing phenotype value, a warning will be generated and recorded in the log file.\r\n\r\nWhen the phenotype values are only 0, 1 and 2, rvtests will automatically treat it as binary traits. However, if you want to treat it as continuous trait, please use \"`--qtl`\" option.\r\n\r\n## Covariate file\r\n\r\nYou can use `--covar` and `--covar-name` to specify covariates that will be used for single variant association analysis. This is an optional parameter. If you do not have covariate in the data, this option can be ignored. \r\n\r\nThe covariate file, (e.g. `example.covar`) has a similar format as the phenotype file:\r\n\r\n    fid iid fatid matid sex y1 y2 y3 y4\r\n    P1 P1 0 0 0 1.911 -1.465 -0.817 1\r\n    P2 P2 0 0 0 2.146 -2.451 -0.178 2\r\n    P3 P3 0 0 0 1.086 -1.194 -0.899 1\r\n    P4 P4 0 0 0 0.704 -1.052 -0.237 1\r\n    P5 P5 0 0 1 2.512 -3.085 -2.579 1\r\n\r\nThe covariate file is specified by the `--covar` option (e.g. `--covar example.covar`). To specify covariates that will be used in the association analysis, the option `--covar-name` can be used. For example, when age, bmi and 3 PCs are used for association analysis, the following option can be specified for the rvtests program, i.e. \r\n`--covar example.covar --covar-name age,bmi,pc1,pc2,pc3`.\r\n\r\nNote: Missing data in the covariate file can be labeled by any non-numeric value (e.g. NA). They will be automatically imputed to the mean value in the data file. \r\n\r\n\r\n## Trait transformation\r\n\r\nIn this meta-analysis, we use inverse normal transformed residuals in the association analysis, which is achieved by using a combination of `--inverseNormal`  and `--useResidualAsPhenotype`. Specifically, we first fit the null model by regressing phenotype on covariates. The residuals are then inverse normal transformed (see Appendix A more detailed formula for transformation). Transformed residuals will be used to obtain score statistics. \r\n\r\nIn meta analysis, an exemplar command for using rvtests looks like the following:\r\n\r\n    ./rvtest --inVcf $vcf --pheno $example.pheno --covar example.covar --covar-name age,bmi --inverseNormal --useResidualAsPhenotype  --meta score,cov --out $output_prefix  \r\n\r\n# Models\r\n\r\nRvtests support various association models.\r\n\r\n## Single variant tests\r\n\r\nSingle variant | Model(#)    |Traits(##) | Covariates | Related / unrelated | Description\r\n:--------------|:---------:|:------:|:----------:|:-------------------:|:-----------\r\nScore test     |  score    |B, Q  |     Y      |         U           | Only null model is used to performed the test\r\nWald  test     |  wald     |B, Q  |     Y      |         U           | Only fit alternative model, and effect size will be estimated\r\nExact test     |  exact    |B     |     N      |         U           | Fisher's test (allelic test)\r\nDominant Exact test     |  dominantExact    |B     |     N      |         U           | Fisher's test (dominant codings)\r\nFam LRT        |  famLRT   |Q     |     Y      |         R, U        | Fast-LMM model\r\nFam Score      |  famScore |Q     |     Y      |         R, U        | Fast-LMM model style likelihood ratio test\r\nGrammar-gamma  |famGrammarGamma| Q     |     Y      |         R, U        | Grammar-gamma method\r\nFirth regression  |firth| B     |     Y      |         U        | Logistic regression with Firth correction by David Firth, discussed by Clement Ma.\r\n\r\n(#) Model columns list the recognized names in rvtests. For example, use `--single score` will apply score test.\r\n\r\n(##) In trait column, B or Q stand for binary or quantitative trait, respectively.\r\n\r\n\r\n## Burden tests\r\n\r\nBurden tests | Model(#)    |Traits(##) | Covariates | Related / unrelated | Description\r\n:--------------|:---------:|:------:|:----------:|:-------------------:|:-----------\r\nCMC             |  cmc       |B, Q  |     Y      |         U           | Collapsing and combine rare variants by Bingshan Li.\r\nZeggini         |  zeggini   |B, Q  |     Y      |         U           | Aggregate counts of rare variants by Morris Zeggini.\r\nMadsen-Browning |  mb        |B     |     Y      |         U           | Up-weight rare variant using inverse frequency from controls by Madsen.\r\nFp              |  fp        |B     |     Y      |         U           | Up-weight rare variant using inverse frequency from controls by Danyu Lin.\r\nExact CMC       |  exactCMC  |B     |     N      |         U           | Collapsing and combine rare variants, then perform Fisher's exact test.\r\nCMC Wald        |  cmcWald   |B, Q  |     Y      |         U           | Collapsing and combine rare variants, then perform Wald test.\r\nRareCover       |  rarecover |B     |     N      |         U           | Find optimal grouping unit for rare variant tests by Thomas Hoffman.\r\nCMAT            |  cmat      |B     |     N      |         U           | Test non-coding variants by Matt Zawistowski.\r\nFamCMC          |  famcmc       |Q  |     Y      |         R           | Collapsing and combine rare variants extended to related samples.\r\nFamZeggini      |  famzeggini   |Q  |     Y      |         R           | Aggregate counts of rare variants extended to related samples.\r\n\r\n\r\n(#) Model columns list the recognized names in rvtests. For example, use `--burden cmc` will apply CMC test.\r\n\r\n(##) In trait column, B or Q stand for binary or quantitative trait, respectively.\r\n\r\n\r\n## Variable threshold models\r\n\r\nSingle variant | Model(#)    |Traits(##) | Covariates | Related / unrelated | Description\r\n:--------------|:---------:|:------:|:----------:|:-------------------:|:-----------\r\nVariable threshold model by permutation     |  price    |B, Q  |     N      |         U           | Every rare-variant frequency cutoffs are tests by Alkes Price.\r\nVariable threshold model by analytic form   |  analytic    |B, Q  |     Y      |         U   | Every rare-variant frequency cutoffs are tests by Danyu Lin.\r\nVariable threshold model by analytic form   |  famAnalytic    | Q  |     Y      |         R   | Every rare-variant frequency cutoffs are tests by Dajiang Liu.\r\n\r\n(#) Model columns list the recognized names in rvtests. For example, use `--vt price` will variable threshold test.\r\nNOTE: our implementatino of Price's test diffs from the original method descrbied in Price's publcation. We test every minor allele frequency cutoff (instead of reference allele counts) and this is a two-sided test (instead of one-sided test).\r\n\r\n(##) In trait column, B or Q stand for binary or quantitative trait, respectively.\r\n\r\n\r\n## Kernel models\r\n\r\nKernel | Model(#)    |Traits(##) | Covariates | Related / unrelated | Description\r\n:--------------|:---------:|:------:|:----------:|:-------------------:|:-----------\r\nSKAT     |  skat    |B, Q  |     Y      |         U           | Sequencing kernel association test by Shawn Lee.\r\nSKATO     |  skato    |B, Q  |     Y      |         U           | Optimal sequencing kernel association test (SKAT-O) by Shawn Lee. (###)\r\nKBAC     |  kbac     |B  |     N      |         U           | Kernel-based adaptive clustering model by Dajiang Liu.\r\nFamSKAT     |  famSkat    |Q  |     Y      |         R           | Sequencing kernel association test extended to related individuals by Han Chen.\r\n\r\n(#) Model columns list the recognized names in rvtests. For example, use `--kernel skat` will apply SKAT test.\r\nTo further customize SKAT test, you can use *--kernel skat[nPerm=100:alpha=0.001:beta1=1:beta2=20]* to specify permutation counts, type-1 error, \r\nbeta distribution parameters for up-weighting rare variants. Rvtests will output a message showing: \r\n\r\n    [INFO]  SKAT test significance will be evaluated using 10000 permutations at alpha = 0.001 (beta1 = 1.00, beta2 = 20.00)\r\n\r\n(##) In trait column, B or Q stand for binary or quantitative trait, respectively.\r\n\r\n(###) SKAT-O implementation may have slightly different results compared with outputs from SKAT R package. That's probably due to numerical stability.\r\n\r\n## Meta-analysis models\r\n\r\nType | Model(#)    |Traits(##) | Covariates | Related / unrelated | Description\r\n:--------------|:---------:|:------:|:----------:|:-------------------:|:-----------\r\nScore test           |  score      | B,Q  |     Y      |         R, U           | standard score tests\r\nDominant model       |  dominant   | B,Q  |     Y      |         R, U           | score tests and covariance matrix under dominant disease model\r\nRecessive model      |  recessive  | B,Q  |     Y      |         R, U           | score tests and covariance matrix under recessive disease model\r\nCovariance           |  cov        | B,Q  |     Y      |         R, U           | covariance matrix\r\n\r\n(#) Model columns list the recognized names in rvtests. For example, use `--meta score,cov` will generate score statistics and covariance matrix for meta-analysis.\r\n\r\n(##) In trait column, B or Q stand for binary or quantitative trait, respectively.\r\n\r\nThe above models are suitable to generate summary statistics which can be later meta-analyzed (see [Dajiang Liu (2014) Nature Genetics](http://www.nature.com/ng/journal/v46/n2/abs/ng.2852.html)).\r\nRvtests implemented the above methods and the results can be further analyzed by RareMetals ([link](http://genome.sph.umich.edu/wiki/RareMETALS)) for quantitative trait and RareMetals2 ([link](http://genome.sph.umich.edu/wiki/RareMETALS2)).\r\nIt also worth to mention that our group offers another toolset for meta analysis ([link](http://genome.sph.umich.edu/wiki/Rare-Metal)).\r\n\r\n**Explanation of outputs**\r\n\r\nThe meta-analysis results come as two files: summary score statistics files (prefix.MetaScore.assoc.gz) and covariance files (prefix.MetaCov.assoc.gz).\r\n\r\nIn summary score statistics files, you will obtain these columns:\r\n\r\n- N_INFORMATIVE: Number of samples that are analyzed for association. \r\n- AF: allele frequency. For related individuals, we use BLUE estimator. For case-control study, we list overall frequency (adjusted by relatedness if possible), case frequency and control frequency separated by a colon.\r\n- INFORMATIVE_ALT_AC: The number of alternative alleles in the analyzed samples.\r\n- CALL_RATE: The fraction of non-missing alleles. For case-control study, we calculate call rate for all samples, case samples and control samples separated by a colon.\r\n- HWE_PVALUE: Hardy-Weinberg equilibrium. For related individuals, this statistic can be inflated. For case-control study, we calculate HWE pvalues for all samples, case samples and controls samples separated by a colon.\r\n- N_REF/N_HET/N_ALT: Number of samples carrying homozygous reference/heterozygous/homozygous alternative alleles. For case-control study, we calculate these three statistics for all samples, case samples and controls samples separated by a colon.\r\n- U_STAT, SQRT_V_STAT: U and V statistics are score statistics and their covariance matrix. Details can be found in [Dajiang Liu (2014) Nature Genetics](http://www.nature.com/ng/journal/v46/n2/abs/ng.2852.html).\r\n- ALT_EFFSIZE: for continuous outcome, this is the estimated effect size; for binary outcome, this is the estimated log odds-ratio. We apply a new correction method when binary trait associations for\r\nrelated individuals are analyzed in standard linear mixed models. The log odds ratio is approximately correct for related individual analysis as well.\r\n\r\nThe covariance files stores covariances in sliding windows. You will obtain these columns:\r\n\r\n- CHROM: the chromosome name\r\n- START_POS/END_POS: within one sliding window, the first/last variant chromosomal position.\r\n- NUM_MARKER: number of markers in one sliding window.\r\n- MARKER_POS: all chromosomal positions in the sliding window.\r\n- COV: covariances between markers. When the sliding window has markers G.1, G.2, ..., G.N, this column will store \"covariances\" of (G.1, G.1), (G.1, G.2), ..., (G.1, G.N);\r\nfor binary outcomes, this column uses colons as separators and additionally stores covariances between N genotypes and K covariates (G.1, C.1), (G.1, C.2), ..., (G.1, C.K), as well as\r\ncovariances between K covariates (C.1, C.1), (C.1, C.2), ... (C.1, C.K), (C.2, C.2), ..., (C.2, C.K), ..., (C.K, C.K).\r\n\r\n\r\n## Utility models\r\n\r\n\r\nRvtests has an convinient option `--outputRaw`. When specifing this, rvtests can output genotypes, phenotype, covariates (if any) and collapsed genotype to tabular files. These files can be imported into other software (e.g. R) for further analyses.\r\n\r\n\r\n# Association test options\r\n\r\n## Sample inclusion/exclusion\r\n\r\nRvtests can flexibly specify which sample(s) to include or exclude:\r\n\r\n           --peopleIncludeID : give IDs of people that will be included in study\r\n         --peopleIncludeFile : from given file, set IDs of people that will be included in study\r\n           --peopleExcludeID : give IDs of people that will be included in study\r\n         --peopleExcludeFile : from given file, set IDs of people that will be included in study\r\n\r\n`--peopleIncludeID` and `--peopleExcludeID` are used to include/exclude samples from command line. \r\nFor example, specify `--peopleIncludeID A,B,C` will include A, B and C sample from the VCF files if they exists.\r\n`--peopleIncludeID` and `--peopleExcludeID` followed by a file name will include or exclude the IDs in the file.\r\nSo to include sample A, B and C, you can provide a file, `people.txt`, looks like:\r\n\r\n    A\r\n    B\r\n    C\r\n\r\nThen use `--peopleIncludeFile people.txt` to include them in the analysis.\r\n\r\n\r\n## Variant site filters\r\n\r\nIt is common that different frequency cutoffs are applied in rare-variant analysis.\r\nTherefore, rvtests specify frequency cutoffs.\r\n\r\nFrequency Cutoff\r\n\r\n                 --freqUpper : Specify upper minor allele frequency bound to be included in analysis\r\n                 --freqLower : Specify lower minor allele frequency bound to be included in analysis\r\n\r\nIf you specify `--freqLower 0.01 --freqUpper 0.05`, only the variants with minor allele frequency between 0.01 and 0.05 (boundary inclusive) will be analyzed.\r\n\r\nSimilar to sample inclusion/exclusion options, you can specify a range of variants to be included by \r\nspecifying `--rangeList` option. For example `--rangeList 1:100-200` will include the chromosome 1 position 100bp to 200bp region.\r\nAlternatively, use a separate file, `range.txt`, and `--rangeFile range.txt` to specify association tests range.\r\n\r\n                 --rangeList : Specify some ranges to use, please use chr:begin-end format.\r\n                 --rangeFile : Specify the file containing ranges, please use chr:begin-end format.\r\n                  --siteFile : Specify the file containing sites to include, please use \"chr pos\" format.\r\n\r\nIt is supported to filter variant site by site depth, minor allele count or annotation (annotated VCF file is needed).\r\n\r\n              --siteDepthMin : Specify minimum depth(inclusive) to be included in analysis\r\n              --siteDepthMax : Specify maximum depth(inclusive) to be included in analysis\r\n                --siteMACMin : Specify minimum Minor Allele Count(inclusive) to be included in analysis\r\n                  --annoType : Specify annotation type that is followed by ANNO= in the VCF INFO field, regular expression is allowed\r\n\r\n*NOTE*: `--annoType` can filter variants based on regular expression.\r\nFor example, `--annoType Nonsynonymous` will only analyze non-synonymous variants where they have `ANNO=Nonsynonymous` in the INFO field.\r\nTo extract more than one annotation types, use `--annoType 'Start_Gain|Stop_Loss|Start_Loss|Essential_Splice_Site|Stop_Gain|Normal_Splice_Site|Synonymous|Nonsynonymous` will extract LOF (loss of function) mutations.\r\nTo generate an annotated VCF file, please read on the next section [Annotation](#Annotation). \r\n\r\n\r\n### Annotation\r\n\r\nWe define a VCF file with annotating information as an annotated VCF here.\r\nThe annotation step can be done using [ANNO](https://github.com/zhanxw/anno), a fast and accurate annotation software.\r\nAt minimal, there are two steps to annotate a VCF file:\r\n\r\n1. Install ANNO and its resources files\r\n\r\n    git clone https://github.com/zhanxw/anno.git\r\n    cd anno; make\r\n    cd resources; ./download.sh\r\n\r\n2. Run the following script:\r\n\r\n    anno -i input.vcf -o output.vcf.gz -r anno/resources/hs37d5.fa -g anno/resources/refFlat_hg19.txt.gz -p anno/priority.txt -c anno/codon.txt --indexOutput\r\n\r\nYou will then obtain an annotated VCF file `output.vcf.gz` and its tabix index `output.vcf.gz.tbi`.\r\n\r\n\r\n## Genotype filters\r\n\r\nGenotype with low depth or low quality can be filtered out by these options:\r\n\r\n              --indvDepthMin : Specify minimum depth(inclusive) of a sample to be included in analysis\r\n              --indvDepthMax : Specify maximum depth(inclusive) of a sample to be included in analysis\r\n               --indvQualMin : Specify minimum depth(inclusive) of a sample to be included in analysis\r\n\r\nWhen genotypes are filtered, they are marked as missing genotypes. \r\nConsequently, samples with missing genotype may or may not be included in the analysis.\r\nThat means samples with genotypes may be dropped (`--impute drop`) \r\nor may still be included (`--impute mean` or `--impute hwe`). \r\nBy default, genotypes are imputed to its means.\r\nSee next section about how you like to handle missing genotypes.\r\n\r\n\r\n## Handle missing genotypes and phenotypes\r\n\r\nWhen genotypes are missing (e.g. genotype = \"./.\") or genotypes are filtered out, \r\nthere are three options to handle them: (1) impute to its mean(default option); (2) impute by HWE equilibrium; (3) remove from the model.\r\nUse `--impute [mean|hwe|drop]` to specify which option to use.\r\n\r\nWhen quantitative phenotypes are missing, for example, some samples have genotype files, but not phenotypes, \r\nrvtests can impute missing phenotype to its mean. \r\n\r\n*NOTE:* Do not use `--imputePheno` for binary trait.\r\n\r\nIn summary, the following two options can be used:\r\n\r\n               --impute : Specify either of mean, hwe, and drop\r\n          --imputePheno : Impute phenotype to mean by those have genotypes but no\r\n                          phenotypes\r\n                          \r\n                          \r\n## Specify groups (e.g burden unit)\r\n\r\nRare variants association tests are usually performed in groups of variants. \r\nThe natural grouping unit is gene. Rvtests can read gene definition file in `refFlat` format,\r\nand perform association for each gene. Use `--geneFile` option to specify the gene file name.\r\nFor example, `--geneFile refFlat_hg19.txt.gz` will use `refFlat_hg19.txt.gz` as gene definition file,\r\nand then perform association tests for every gene. Use `--gene` to specify a subset of genes to test.\r\nFor example, `--gene CFH` will only test CFH gene.\r\n\r\nAlternative grouping unit can be specified as *set*. \r\nThese *sets* are treated similar to gene.\r\nYou can thus use `--setFile` to define sets (similar to `--geneFile` option), \r\nand use `--set` to define a specific set (similar to `--gene` option). \r\nAdditionally, use `--setList` can specify a set to test from command line.\r\n\r\nThe format of a set file is: (1) set names; (2) ranges (e.g. chrom:begin-end);\r\nFor example, you have a set file, `example.set`, like this:\r\n\r\n    set1 1:100-200,1:250-300\r\n    set2 2:500-600\r\n    \r\nYou can specify `--setFile example.set --set set2` to group variants \r\nwithin chromosome 2, position 500 to 600bp. \r\nIf you want to test a particular region, for example, chromosome 2, position 500 to 550bp,\r\nbut do not want to make another file, you can use `--setList 2:500-600`.\r\n\r\nIn summary, options related to *Grouping Unit* are listed below: \r\n\r\n             --geneFile : specify a gene file (for burden tests)\r\n                 --gene : specify which genes to test\r\n              --setList : specify a list to test (for burden tests)\r\n              --setFile : specify a list file (for burden tests, first two columns:\r\n                          setName chr:beg-end)\r\n                  --set : specify which set to test (1st column)\r\n\r\n\r\n# Sex chromosome analysis\r\n\r\nRvtests support X chromosome analysis. In human X chromosome, there is PAR (pseudoautosomal region) and non-PAR region.\r\nFor males, there are two X allele in PAR region and one allele in non-PAR region.\r\nWhile the PAR region is treated in the same way as autosomes, rvtests treat non-PAR region differently.\r\nBelow we will describe the details about how rvtests handles non-PAR region.\r\n\r\n*Prepare data*. According to VCF standard, male genotype needs to coded as 0 or 1. For compatibility, rvtests also support 0/0 or 1/1 coding. \r\nIn VCF files, male genotypes can be written as \"0\", \"1\", \"0|0\", \"0/0\", \"1|1\", \"1/1\". All other genotypes will be treated as missing.\r\n\r\n*Genotype in the regression model*. For consistence, male genotypes are converted to 0 or 2.\r\n\r\n*MetaScore results*. If `--meta score` is specified, the output file `prefix.MetaScore.assoc.gz` includes PAR-region and non-PAR region analysis. \r\nHowever, in the non-PAR region, the difference is that Hardy-Weinberg P-value and homeozygous-reference/heterzygous/homozygous-alternative sample sizes are calculated using female samples only.\r\n\r\n*Related individuals*. Just append `--xHemi` to the `vcf2kinship` (more details in [Kinship generation](#kinship-generation)) and `rvtest` command lines. Rvtests can recognize non-PAR region kinship file and use it in the analysis.\r\n\r\n*PAR region*. PAR region is defined as two regions X:60001-2699520 and X:154931044-155260560. Use `--xLabel` can specify which chromosome has PAR region (default: 23 or X)\r\nand use `--xParRegion` to specify PAR region (default: hg19, meaning '60001-2699520,154931044-155260560' in the UCSC build hg19, specify \"hg18\" will use PAR region definition in the UCSC build hg18, or specify \"hg38\" will use UCSC build 38).\r\n\r\n# Kinship generation\r\n\r\nAnalysis of related individual usually requires estimation of kinship. You can a separate tool, `vcf2kinship`.\r\n`vcf2kinship` is usually included in rvtests binary distribution or can be built from software source codes.\r\n\r\n`vcf2kinship` can calculate pedigree kinship using a pedigree input file (PED format, see [Phenotype file](#phenotype-file), use option `--ped`).\r\nThe output file name is specified by `--prefix` option. If you use `--prefix output` then the output files will include `output.kinship`.\r\n\r\nIt can also calculate empirical kinship using genotype input file (VCF format, see [Genotype file (VCF)](#genotype-file-vcf), use option `--inVcf`).\r\nFor empirical kinship, you also need to specify the kinship model, either Balding-Nicols model (use option `--bn`) or Identity-by-state model (use option `--ibs`).\r\n\r\nIn sex chromosome analysis, it is often required to generate kinship on X chromosome regions, then you need to specify `--xHemi`. If your input VCF file has different X chromosome label (e.g. chromosome name is '23' instead of 'X'), you can use `--xLabel 23`.\r\n\r\nIf principal component decomposition (PCA) results are needed, you can use option `--pca`. Then output files with suffix '.pca' include PCA results.\r\n\r\nWhen dealing with large input files, it is often preferred to use multiple CPU to speed up calculation using the option `--thread N` in which N is the number of CPU.\r\n\r\nFor example, to generate pedigree-based kinship (`--ped`) on both autosomal region and X chromosome (`--xHemi`) region, the command line is:\r\n\r\n    vcf2kinship --ped input.ped --xHemi --out output\r\n\r\nTo generate empirical kinship (`--inVcf`) on both autosomal region and X chromosome (`--xHemi`) region using Balding-Nicols model, the command line is:\r\n\r\n    vcf2kinship --inVcf input.vcf.gz --ped input.ped --bn --xHemi --out output\r\n\r\nNOTE: you need to provide a pedigree file (PED) in the above case, as `vcf2kinship` need the sex information of samples.\r\n\r\n# Resources\r\n\r\n## UCSC RefFlat Genes\r\n\r\nrefFlat_hg19.txt.gz\r\n\r\nUCSC gene definition file in the refFlat format ([Details](http://genome.ucsc.edu/goldenpath/gbdDescriptionsOld.html#RefFlat)) in NCBI genome build 37 .\r\n\r\nFile link: <http://qbrc.swmed.edu/zhanxw/seqminer/data/refFlat_hg19.txt.gz>\r\n\r\n\r\n## Gencode Genes\r\n\r\nrefFlat.gencode.v19.gz\r\n\r\nGencode gene definition version 19 in the refFlat format ([Details](http://www.gencodegenes.org/releases/19.html)). We have also previous versions of gene files and can provide upon request.\r\n\r\nFile link: <http://qbrc.swmed.edu/zhanxw/seqminer/data/refFlat.gencode.v19.gz>\r\n\r\n\r\n\r\n# Frequently Asked Questions (FAQ)\r\n\r\n* Does rvtests support binary traits of related-individuals?\r\n\r\nYes and no. Proper analyses of related-individual are supported in meta-analysis model as described in section (#meta-analysis-models).\r\nIn many other association models, supporting binary traits for related individuals is complex and we have not found good solutions.\r\n\r\n* Can you provide a list of command line options?\r\n\r\nRvtests have build-in help that can be found by executing `rvtest --help`.\r\nWe also put all available options in this [link](https://github.com/zhanxw/rvtests/wiki/Command-Line-Options).\r\n\r\n* Can you provide standard error (SE) or confidence interval (CI) for the estimated Beta in the score model?\r\n\r\nIn the output of MetaScore model (--meta score), the standard error is the inverse of SQRT_V_STAT.\r\nFor example, if SQRT_V_STAT = 2, that means the standard error of estimated beta is 1/2 = 0.5.\r\n\r\n* Why the INFORMATIVE_ALT_AC, N_REF and N_ALT columns have zero counts for certain chromosome X regions in meta-analysis models?\r\n\r\nThese counts are calculated from female individuals. If your study only has male samples, rvtests cannot report these counts. Because if a male carries a non-reference allele, we cannot conclude that this is heterozygous (0/1) site or homozygous alternatives (1/1) site.\r\n\r\n* Why P-values can be -1?\r\n\r\nIf rvtests fails to fit using a certain model, it cannot calculate P-value reliably. Rvtests will print P-value as -1 instead of any number between 0 and 1 to indicate that an error occurred.\r\nHowever, this should rarely happen. Please contact us if you have further questions.\r\n\r\n* Why SKAT Q-values reported by rvtests are different from the SKAT R package?\r\n\r\nWe strictly follow the notations in the SKAT publication ([Wu et al. (2011) AJHG](http://www.hsph.harvard.edu/skat/)). However, in SKAT R package, its implementation is slightly different.\r\nFor example, in quantitative trait anlaysis, Q is divided by (2 * \\hat{sigma2}) in the R package, but not in rvtests.\r\nAlthough Q values can be different, the P-values from the two software packges should match (only in rare cases, numerical accrucy may cause minor differences).\r\n\r\n* How rvtests handle multi-allelic variants?\r\n\r\nIn rvtests, we focus on bi-allelic, and thus treat multi-allelic variants as bi-allelic variants. Any genotype that includes other than reference allele and the first alternative allele will be treated as missing.\r\nFor example, genotyep '0/2' will be treated as missing.\r\n\r\n\r\n# Feedback/Contact\r\n\r\nQuestions and requests can be sent to\r\nXiaowei Zhan ([zhanxw@umich.edu](mailto:zhanxw@umich.edu \"mailto:zhanxw@umich.edu\"))\r\nor\r\nDajiang Liu ([dajiang.liu@outlook.com](mailto:dajiang.liu@outlook.com \"mailto:dajiang.liu@outlook.com\"))\r\nor\r\nGoncalo Abecasis ([goncalo@umich.edu](mailto:goncalo@umich.edu \"mailto:goncalo@umich.edu\"))\r\n\r\nRvtests is a collaborative effort from Xiaowei Zhan, Youna Hu, Bingshan Li, Dajiang Liu and Goncalo Abecasis.\r\n\r\nWe wawnt to thank rvtests users and especially those who have provided valuable feedbacks. These users include: Xueling Sim, Scott Verize, Shuang Feng, Kevin Lu, Ruth Loos, Tessel Galesloot, Valerie Turcot, Stefan Gustafsson, Corbin Quick, Adam Locke, and the GIANT consoritum and the GLGC consortium.\r\n\r\n","google":"UA-21871925-1","note":"Don't delete this file! It's used internally to help with page regeneration."}